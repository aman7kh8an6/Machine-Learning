{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9591703,"sourceType":"datasetVersion","datasetId":5850193}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/amankhan98/outliers-detection-zscore?scriptVersionId=207130163\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:33.540887Z","iopub.execute_input":"2024-11-13T17:41:33.541998Z","iopub.status.idle":"2024-11-13T17:41:34.927579Z","shell.execute_reply.started":"2024-11-13T17:41:33.541924Z","shell.execute_reply":"2024-11-13T17:41:34.926446Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/placement/placement.csv\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/placement/placement.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:34.929974Z","iopub.execute_input":"2024-11-13T17:41:34.931172Z","iopub.status.idle":"2024-11-13T17:41:34.951977Z","shell.execute_reply.started":"2024-11-13T17:41:34.931115Z","shell.execute_reply":"2024-11-13T17:41:34.950813Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:34.953694Z","iopub.execute_input":"2024-11-13T17:41:34.954223Z","iopub.status.idle":"2024-11-13T17:41:34.979969Z","shell.execute_reply.started":"2024-11-13T17:41:34.954166Z","shell.execute_reply":"2024-11-13T17:41:34.978796Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   cgpa  placement_exam_marks  placed\n0  7.19                  26.0       1\n1  7.46                  38.0       1\n2  7.54                  40.0       1\n3  6.42                   8.0       1\n4  7.23                  17.0       0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7.19</td>\n      <td>26.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7.46</td>\n      <td>38.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.54</td>\n      <td>40.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.42</td>\n      <td>8.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7.23</td>\n      <td>17.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:34.982299Z","iopub.execute_input":"2024-11-13T17:41:34.982679Z","iopub.status.idle":"2024-11-13T17:41:35.008388Z","shell.execute_reply.started":"2024-11-13T17:41:34.98264Z","shell.execute_reply":"2024-11-13T17:41:35.007243Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"              cgpa  placement_exam_marks       placed\ncount  1000.000000           1000.000000  1000.000000\nmean      6.961240             32.225000     0.489000\nstd       0.615898             19.130822     0.500129\nmin       4.890000              0.000000     0.000000\n25%       6.550000             17.000000     0.000000\n50%       6.960000             28.000000     0.000000\n75%       7.370000             44.000000     1.000000\nmax       9.120000            100.000000     1.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1000.000000</td>\n      <td>1000.000000</td>\n      <td>1000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>6.961240</td>\n      <td>32.225000</td>\n      <td>0.489000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.615898</td>\n      <td>19.130822</td>\n      <td>0.500129</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.890000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>6.550000</td>\n      <td>17.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>6.960000</td>\n      <td>28.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.370000</td>\n      <td>44.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>9.120000</td>\n      <td>100.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 2, figsize=(12, 6))\n\nsns.kdeplot(data=df, x=\"cgpa\", ax=axes[0])\naxes[0].set_title(\"Distribution of CGPA\")\n\nsns.kdeplot(data=df, x=\"placement_exam_marks\", ax=axes[1])\naxes[1].set_title(\"Distribution of Marks\")\n\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:35.009538Z","iopub.execute_input":"2024-11-13T17:41:35.009846Z","iopub.status.idle":"2024-11-13T17:41:35.766526Z","shell.execute_reply.started":"2024-11-13T17:41:35.009814Z","shell.execute_reply":"2024-11-13T17:41:35.765365Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"df['placement_exam_marks'].skew()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:35.767911Z","iopub.execute_input":"2024-11-13T17:41:35.768266Z","iopub.status.idle":"2024-11-13T17:41:35.775813Z","shell.execute_reply.started":"2024-11-13T17:41:35.768232Z","shell.execute_reply":"2024-11-13T17:41:35.774641Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"0.8356419499466834"},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"#### Skewness for the column placement_exam_marks is high so we should not apply Z-Score to this column, but we can use it in cgpa column as it is normally distributed.","metadata":{}},{"cell_type":"code","source":"# Calculating the Zscore\n\ndf['cgpa_zscore'] = (df['cgpa'] - df['cgpa'].mean())/df['cgpa'].std()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:41:36.059988Z","iopub.execute_input":"2024-11-13T17:41:36.060343Z","iopub.status.idle":"2024-11-13T17:41:36.067854Z","shell.execute_reply.started":"2024-11-13T17:41:36.060306Z","shell.execute_reply":"2024-11-13T17:41:36.066748Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"#### If the ZScore is > 3 or < -3 than it's an outlier","metadata":{}},{"cell_type":"code","source":"df[df['cgpa_zscore'] > 3]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:42:07.217243Z","iopub.execute_input":"2024-11-13T17:42:07.217687Z","iopub.status.idle":"2024-11-13T17:42:07.232898Z","shell.execute_reply.started":"2024-11-13T17:42:07.217644Z","shell.execute_reply":"2024-11-13T17:42:07.231661Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"     cgpa  placement_exam_marks  placed  cgpa_zscore\n995  8.87                  44.0       1     3.099150\n996  9.12                  65.0       1     3.505062","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n      <th>cgpa_zscore</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>995</th>\n      <td>8.87</td>\n      <td>44.0</td>\n      <td>1</td>\n      <td>3.099150</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>9.12</td>\n      <td>65.0</td>\n      <td>1</td>\n      <td>3.505062</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"df[df['cgpa_zscore'] < -3]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:42:25.505766Z","iopub.execute_input":"2024-11-13T17:42:25.506983Z","iopub.status.idle":"2024-11-13T17:42:25.519279Z","shell.execute_reply.started":"2024-11-13T17:42:25.506901Z","shell.execute_reply":"2024-11-13T17:42:25.518139Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"     cgpa  placement_exam_marks  placed  cgpa_zscore\n485  4.92                  44.0       1    -3.314251\n997  4.89                  34.0       0    -3.362960\n999  4.90                  10.0       1    -3.346724","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n      <th>cgpa_zscore</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>485</th>\n      <td>4.92</td>\n      <td>44.0</td>\n      <td>1</td>\n      <td>-3.314251</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>4.89</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>-3.362960</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>4.90</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>-3.346724</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"df[(df['cgpa_zscore'] > 3) | (df['cgpa_zscore'] < -3)]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:43:57.186203Z","iopub.execute_input":"2024-11-13T17:43:57.187257Z","iopub.status.idle":"2024-11-13T17:43:57.201135Z","shell.execute_reply.started":"2024-11-13T17:43:57.187213Z","shell.execute_reply":"2024-11-13T17:43:57.199894Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"     cgpa  placement_exam_marks  placed  cgpa_zscore\n485  4.92                  44.0       1    -3.314251\n995  8.87                  44.0       1     3.099150\n996  9.12                  65.0       1     3.505062\n997  4.89                  34.0       0    -3.362960\n999  4.90                  10.0       1    -3.346724","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n      <th>cgpa_zscore</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>485</th>\n      <td>4.92</td>\n      <td>44.0</td>\n      <td>1</td>\n      <td>-3.314251</td>\n    </tr>\n    <tr>\n      <th>995</th>\n      <td>8.87</td>\n      <td>44.0</td>\n      <td>1</td>\n      <td>3.099150</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>9.12</td>\n      <td>65.0</td>\n      <td>1</td>\n      <td>3.505062</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>4.89</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>-3.362960</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>4.90</td>\n      <td>10.0</td>\n      <td>1</td>\n      <td>-3.346724</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"markdown","source":"#### Creating new dataframe by filtering out the outliers","metadata":{}},{"cell_type":"code","source":"#Trimming\nnew_df = df[(df['cgpa_zscore'] <= 3) & (df['cgpa_zscore'] > -3)]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:45:11.146674Z","iopub.execute_input":"2024-11-13T17:45:11.148146Z","iopub.status.idle":"2024-11-13T17:45:11.157372Z","shell.execute_reply.started":"2024-11-13T17:45:11.148076Z","shell.execute_reply":"2024-11-13T17:45:11.155807Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"new_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:45:16.625764Z","iopub.execute_input":"2024-11-13T17:45:16.626263Z","iopub.status.idle":"2024-11-13T17:45:16.643299Z","shell.execute_reply.started":"2024-11-13T17:45:16.626222Z","shell.execute_reply":"2024-11-13T17:45:16.641914Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"     cgpa  placement_exam_marks  placed  cgpa_zscore\n0    7.19                  26.0       1     0.371425\n1    7.46                  38.0       1     0.809810\n2    7.54                  40.0       1     0.939701\n3    6.42                   8.0       1    -0.878782\n4    7.23                  17.0       0     0.436371\n..    ...                   ...     ...          ...\n991  7.04                  57.0       0     0.127878\n992  6.26                  12.0       0    -1.138565\n993  6.73                  21.0       1    -0.375452\n994  6.48                  63.0       0    -0.781363\n998  8.62                  46.0       1     2.693239\n\n[995 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cgpa</th>\n      <th>placement_exam_marks</th>\n      <th>placed</th>\n      <th>cgpa_zscore</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7.19</td>\n      <td>26.0</td>\n      <td>1</td>\n      <td>0.371425</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7.46</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0.809810</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.54</td>\n      <td>40.0</td>\n      <td>1</td>\n      <td>0.939701</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6.42</td>\n      <td>8.0</td>\n      <td>1</td>\n      <td>-0.878782</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7.23</td>\n      <td>17.0</td>\n      <td>0</td>\n      <td>0.436371</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>991</th>\n      <td>7.04</td>\n      <td>57.0</td>\n      <td>0</td>\n      <td>0.127878</td>\n    </tr>\n    <tr>\n      <th>992</th>\n      <td>6.26</td>\n      <td>12.0</td>\n      <td>0</td>\n      <td>-1.138565</td>\n    </tr>\n    <tr>\n      <th>993</th>\n      <td>6.73</td>\n      <td>21.0</td>\n      <td>1</td>\n      <td>-0.375452</td>\n    </tr>\n    <tr>\n      <th>994</th>\n      <td>6.48</td>\n      <td>63.0</td>\n      <td>0</td>\n      <td>-0.781363</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>8.62</td>\n      <td>46.0</td>\n      <td>1</td>\n      <td>2.693239</td>\n    </tr>\n  </tbody>\n</table>\n<p>995 rows × 4 columns</p>\n</div>"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"### Capping","metadata":{}},{"cell_type":"code","source":"# We can calculate the upper limit and lower limit from the (mean +- 3*(standard deviation)) formula and assign these value to the value above and lower to it respectively.\nupper_limit = df['cgpa'].mean() + 3*df['cgpa'].std()\nlower_limit = df['cgpa'].mean() - 3*df['cgpa'].std()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:51:52.110116Z","iopub.execute_input":"2024-11-13T17:51:52.110563Z","iopub.status.idle":"2024-11-13T17:51:52.118114Z","shell.execute_reply.started":"2024-11-13T17:51:52.110527Z","shell.execute_reply":"2024-11-13T17:51:52.11666Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"#Assigning upper cap value to the values greater than upper limit and lower cap value to the value lower than lower limit\ndf['cgpa'] = np.where(\n    df['cgpa']>upper_limit,\n    upper_limit,\n    np.where(\n        df['cgpa']<lower_limit,\n        lower_limit,\n        df['cgpa']\n    )\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:52:04.385565Z","iopub.execute_input":"2024-11-13T17:52:04.386395Z","iopub.status.idle":"2024-11-13T17:52:04.39334Z","shell.execute_reply.started":"2024-11-13T17:52:04.386349Z","shell.execute_reply":"2024-11-13T17:52:04.39185Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:56:10.505068Z","iopub.execute_input":"2024-11-13T17:56:10.506241Z","iopub.status.idle":"2024-11-13T17:56:10.51408Z","shell.execute_reply.started":"2024-11-13T17:56:10.506181Z","shell.execute_reply":"2024-11-13T17:56:10.51291Z"}},"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"(1000, 4)"},"metadata":{}}],"execution_count":21},{"cell_type":"code","source":"df['cgpa'].describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-13T17:56:29.344883Z","iopub.execute_input":"2024-11-13T17:56:29.346001Z","iopub.status.idle":"2024-11-13T17:56:29.358539Z","shell.execute_reply.started":"2024-11-13T17:56:29.345934Z","shell.execute_reply":"2024-11-13T17:56:29.357238Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"count    1000.000000\nmean        6.961499\nstd         0.612688\nmin         5.113546\n25%         6.550000\n50%         6.960000\n75%         7.370000\nmax         8.808934\nName: cgpa, dtype: float64"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}